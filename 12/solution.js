/* 
Problem 12 - Highly divisible triangular number

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors? 
*/
function Solution() {

    const getTriangleNumber = (i) => i*(i+1)/2

    const getFactorsForTriangleNumber = (number) => {
        let factors = [];
        for(var i = 1; i <= Math.floor(number/2);i++){
            if(number%i < 1) factors.push(i);
        }
        factors.push(number);
        return factors;
    }

    const getTriangleNumberWithMoreDivisors = (divisor) => {
        let number = 1, i=2;
        do {
            number = getTriangleNumber(i);
            i++;
        } while(getFactorsForTriangleNumber(number).length<divisor)
        return number        
    }

    Solution.prototype.getTriangleNumber = (i) => getTriangleNumber(i);

    Solution.prototype.getFactorsForTriangleNumber = (n) => getFactorsForTriangleNumber(n);

    Solution.prototype.getTriangleNumberWithMoreDivisors = (d) => getTriangleNumberWithMoreDivisors(d)

    Solution.prototype.solveProblem = () => getTriangleNumberWithMoreDivisors(500)
}

module.exports = Solution;