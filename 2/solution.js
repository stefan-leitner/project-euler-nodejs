/* 
Problem 2 - Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 
*/

'use strict'

function Solution() {
    const fibonacci = (maxValue) => {
        var f, n;
        for(var i = 1; i < maxValue;i++){
            if(i === 1) {
                f = [1,2];
                i = 2;
            } else {
                n = f[f.length - 1] + f[f.length -2];
                n <= maxValue ? f.push(n) : {}
                i = n;
            }
        }
        return f
    }

    const sumEvenNumbers = (fibonacci) => {
        return fibonacci.filter(num => num%2 === 0).reduce((sum,acc) => sum + acc)
    }

    Solution.prototype.fibonacci = (maxValue) => {
        return fibonacci(maxValue)
    }
    
    // solution for maxValue
    Solution.prototype.solve = (maxValue) => {
        return sumEvenNumbers(fibonacci(maxValue))
    }

    // solution called by index.js
    Solution.prototype.solveProblem = () => {
        return sumEvenNumbers(fibonacci(4000000))
    }
}

module.exports = Solution;